import { useState } from 'react';
import { useChain } from '@cosmos-kit/react';
import { useRouter } from 'next/router'
import Link from 'next/link';
import Head from 'next/head';
import { StdFee } from '@cosmjs/amino';
import { SigningStargateClient } from '@cosmjs/stargate';
import BigNumber from 'bignumber.js';
import { Navbar } from '../components/Navbar';
import { Footer } from '../components/Footer';
import header from '../public/header.jpg';
import Image from 'next/image'
import {
  Box,
  Divider,
  Grid,
  Heading,
  Text,
  Stack,
  Container,
  Button,
  Flex,
  Icon,
  useColorMode,
  Center,
} from '@chakra-ui/react';
import { BsFillMoonStarsFill, BsFillSunFill } from 'react-icons/bs';
import {
  chainassets,
  chainName,
  coin,
  dependencies,
} from '../config';

import { WalletStatus } from '@cosmos-kit/core';
import {
  Product,
  Dependency,
  WalletSection,
  handleChangeColorModeValue,
} from '../components';
import { cosmos } from 'juno-network';
import { SendTokensCard } from '../components/react/send-tokens-card';

const tutorial = {
  title: 'Register Here',
  text: 'Provide a name & email address to register.',
  href: '/register',
};



export default function Home() {
  const router = useRouter()
  const { colorMode, toggleColorMode } = useColorMode();

  const { getSigningStargateClient, address, status, getRpcEndpoint } =
    useChain(chainName);

  const [balance, setBalance] = useState(new BigNumber(0));
  const [isFetchingBalance, setFetchingBalance] = useState(false);
  const [resp, setResp] = useState('');


  return (
    <Container maxW="5xl" py={10}>
      <Navbar />
      <Head>
        <title>Mothership Application</title>
        <meta name="description" content="Generated by PermissionlessWeb" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex justifyContent="end" mb={4}>
       
      </Flex>
      <Box   textAlign="center">
        <Heading
          as="h1"
          fontSize={{ base: '3xl', md: '5xl' }}
          fontWeight="extrabold"
          mb={5}
        >
          Mothership 4/20
        </Heading>
        <Heading
          as="h1"
          fontWeight="bold"
          fontSize={{ base: '2xl', md: '4xl' }}
        
        >
          <Text as="span">Welcome to&nbsp;</Text>
          <Text
            as="span"
            color={handleChangeColorModeValue(
              colorMode,
              'primary.500',
              'primary.200'
              )}
          >
             Mothership's 4/20 celebration!
          </Text>
        </Heading>
        <Image src={header}/>
      </Box>

      

      <Center mb={16}>
        {/*<SendTokensCard
          isConnectWallet={status === WalletStatus.Connected}
          balance={balance.toNumber()}
          isFetchingBalance={isFetchingBalance}
          response={resp}
          sendTokensButtonText="Send Tokens"
          handleClickSendTokens={sendTokens(
            getSigningStargateClient as () => Promise<SigningStargateClient>,
            setResp as () => any,
            address as string
          )}
          handleClickGetBalance={() => {
            setFetchingBalance(true);
            getBalance();
          }}
          
        />*/}
      </Center>

      <Box mb={16}>
        <Divider />
      </Box>
     
      <Grid templateColumns={{ md: 'repeat(2, 1fr)' }} gap={8} mb={20}>
        <Dependency {...tutorial} />
        {dependencies.map((dependency) => (
          <Dependency key={dependency.title} {...dependency} />
        ))}
      </Grid>

      <Box mb={3}>
        <Divider />
      </Box>
      <Footer/>
    </Container>
  );
}
